<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[css3 动画关键帧动画]]></title>
    <url>%2F2019%2F03%2F28%2Fcss3-%E5%8A%A8%E7%94%BB%E5%85%B3%E9%94%AE%E5%B8%A7%E5%8A%A8%E7%94%BB%2F</url>
    <content type="text"><![CDATA[网页当中常见的3种动画表现形式:1. css3动画 优点：浏览器可以对动画进行优化，强制使用硬件加速（通过GPU来提高动画性能）。 缺点：CSS动画只能暂停,不可以固定动画中某个特定的时间点，不能中间反转动画，不能控制时间的灵活度，不能在某个特殊的位置添加回调函数或是绑定回放事件,没有进度报告。 2. gif动画/flash动画 优点：容易操作，对计算机的硬件要求低。 缺点：Flash动画必须要插件来支持，如果没安装插件，浏览器是解析不了的。 3. js脚本动画 优点：灵活度高，可做到对动画的随时控制。缺点：动画实现难度比css3动画高，在浏览器的主线程中运行，可能受到其他程序逻辑影响。 关键帧动画是什么？关键帧动画是让元素从一种样式逐渐变化为另一种样式，可以根据需要更改任意数量的CSS属性，次数没有限制。要使用CSS动画，您必须首先为动画指定一些关键帧。关键帧保存元素在特定时间具有的样式。 示例 动画的构成动画由两部分组成 关键帧 - 定义动画的阶段和样式 动画属性 - 用 @keyframes 创建动画，把它绑定到一个选择器并且定义如何动画 关键帧keyframes每个keyframes由动画名称、动画阶段、css属性三部分组成 语法1234@keyframes animationname &#123;keyframes-selector &#123;css-styles;&#125;&#125;animationname 动画的名字keyframes-selector动画时长的百分比（0%-100%为有效数值或者from-to）css-styles;一个或多个合法的 CSS 样式属性 我们定义一个简单的关键帧动画，名字为“fandeIn”。它共有两个阶段，从第开始阶段（0%）不透明度0到结束阶段（100%）变化为不透明度为112345678@keyframes fandeIn&#123;0%&#123;opacity:0&#125;100%&#123;opacity:1&#125;&#125; 动画属性动画属性做两件事： 将@keyframes分配给要动画的元素。 定义它是如何动画的。 以下是@keyframes的所有动画属性： 属性 描述 animation 所有动画属性的简写属性，除了 animation-play-state 属性。 animation-name 规定 @keyframes 动画的名称。 animation-duration 规定动画完成一个周期所花费的秒或毫秒。默认是 0。 animation-timing-function 规定动画的速度曲线。默认是 “ease”。 animation-fill-mode 规定当动画不播放时（当动画完成时，或当动画有一个延迟未开始播放时），要应用到元素的样式。 animation-delay 规定动画何时开始。默认是 0。 animation-iteration-count 规定动画被播放的次数。默认是 1。 animation-direction 规定动画是否在下一周期逆向地播放。默认是 “normal”。 animation-play-state 规定动画是否正在运行或暂停。默认是 “running”。 1. 时间函数（animation-timing-function）animation-timing-function属性定义了动画的播放速度曲线。 可选配置参数为:ease、ease-in、ease-out、ease-in-out、linear、cubic-bezier(number, number, number, number) 对比示例 2.动画方向（animation-direction）animation-direction 表示CSS动画是否反向播放。 可选参数为: animation-direction: normal 正序播放 animation-direction: reverse 倒序播放 animation-direction: alternate 交替播放 animation-direction: alternate-reverse 反向交替播放 对比示例 3.动画延迟（animation-delay）animation-delay属性定义动画是从何时开始播放，即动画应用在元素上的到动画开始的这段时间的长度。 默认值0s，表示动画在该元素上后立即开始执行。 单位为s，或者ms。一旦动画开始运行，延迟的值将不会再起作用,之后的循环也不会有延迟时间。 4.动画迭代次数（animation-iteration-count）animation-iteration-count该属性就是定义我们的动画播放的次数。次数可以是1次或者无限循环。默认值只播放一次。 参数为：数字或者infinite 5.动画填充模式（animation-fill-mode）animation-fill-mode是指给定动画播放前后应用元素的样式。 可选参数为: animation-fill-mode: none 动画执行前后不改变任何样式 animation-fill-mode: forwards 保持目标动画最后一帧的样式 animation-fill-mode: backwards 保持目标动画第一帧的样式 animation-fill-mode: both 动画将会执行 forwards 和 backwards 执行的动作。 6.动画播放状态（animation-play-state）animation-play-state定义动画是否运行或者暂停。可以确定查询它来确定动画是否运行。 默认值为running 当动画暂停时，它会保留动画的所有最后的计算值： 在JavaScript中使用此属性可在动画的一个控制周期中暂停和播放。此时动画会从暂停时的状态继续播放，不会回到0%的位置重新播放。]]></content>
      <categories>
        <category>css3</category>
      </categories>
      <tags>
        <tag>css3</tag>
        <tag>帧动画</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JMeter在消息中心中的应用]]></title>
    <url>%2F2019%2F03%2F28%2FJMeter%E5%9C%A8%E6%B6%88%E6%81%AF%E4%B8%AD%E5%BF%83%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8%2F</url>
    <content type="text"><![CDATA[JMeter在消息中心中的应用 1 目的自动化发送线索下次沟通时间提醒消息和新线索分配提醒消息 2 JMeter测试计划总架构 3 组件讲解 3.1 用户自定义参数-02 与 用户自定义参数-01组件名：User Defined Variables定义：用户自定义参数-02是对测试02环境的参数配置，用户自定义参数-01是对测试01环境的参数配置 目的：方便后期统一更改参数 使用方法：针对测试02环境时，可以将用户自定义参数-02置为enable，将用户自定义参数-01置为disable，反之亦然 3.2 登录（Login） 与 HTTP用户信息缓存管理组件名：登录（Login）：HTTP RequestHTTP用户信息缓存管理：HTTP Cookie Manager 定义：Method：PostPath：api/MemberShip/LoginContent encoding：UTF-8参数说明：name：用户名，使用用户自定义参数中的UserNamepassword：密码，使用用户自定义参数中的time和UserPassWord，并使用md5加密timestamp：时间戳，使用用户自定义参数中的time 功能：登录（Login）即实际操作中的登录，HTTP用户信息缓存管理可以将用户session保存至过期，使用户在脚本运行期间保持登录状态 3.3 HTTP请求默认值（IP）组件名：HTTP Request Defaults 定义：Protocol【http】：httpsServer Name or IP：请求IP，使用用户自定义参数中的IP 目的：方便后期更改IP 3.4 HTTP头管理组件名：HTTP Header Manager 定义：参数：name（content-type），value（application/json） 目的：统一设置HTTP请求中的请求头 3.5 用户组组件名：Thread Group定义：Number of Threads（users）：用户数，设定为1个用户Ramp-Up Period（in seconds）：所有用户在该时间内创建完毕，设定为1秒Loop Count：循环次数，设定为1次，即不循环 3.6 获取当前账户机构用户（GetCurrentUser）组件名：HTTP Request 定义：Method：GetPath：api/MemberShip/GetCurrentUserContent encoding：UTF-8 后续提取数据组件名：JSON Extractor 后续提取数据组件定义：Name of created variables：创建的变量名，用于存储提取出的数据JSON Path expressions：用于提取数据的JSON路径Default Values：若提取出来无数据，则使用该默认值 3.7 Loop Controller组件名：Loop Controller 定义：Loop Count：循环次数，设置为8次，即每个用户运行该controller下的请求8次 3.8 CSV Data Set Config -02 与 CSV Data Set Config -01组件名：CSV Data Set Config 定义：CSV Data Set Config -02用于提取测试02环境的线索ID，CSV Data Set Config -01用于提取测试01环境的线索IDFilename：要读取的csv文档路径File encoding：UTF-8Variable Names：创建的变量名，用于存储从csv读取的数据 3.9 添加沟通记录（ClueCommunication/Save）组件名：HTTP Request 定义：Method：PostPath：api/ClueCommunication/SaveContent encoding：UTF-8参数说明：clueId：线索ID，使用CSV Data Set Config中提取的数据clueCommunicationTypeId：沟通方式ID，使用用户自定义参数中的clueCommunicationTypeIdclueIntentionalId：意向度ID，使用用户自定义参数中的clueIntentionalIdclueStatusId：线索状态ID，使用用户自定义参数中的clueStatusIdclueClassifyIds：线索分类ID数组，使用用户自定义参数中的clueClassifyIdseffectiveStatus：有效状态，使用用户自定义参数中的effectiveStatuscommunicationTime：沟通时间，使用用户自定义参数中的communicationTimecommunicationContent：沟通内容，使用用户自定义参数中的communicationContent 3.10 批量分配（BatchDistribute）组件名：HTTP Request 定义：Method：PostPath：api/Clue/BatchDistributeContent encoding：UTF-8参数说明：clueIds：线索ID数组，使用用户自定义参数中的clueIdsrecruiterId：招生顾问ID，使用获取当前账户机构用户（GetCurrentUser）中提取出的Public_Operability_OrgUserId 3.11 Debug Sampler组件名：Debug Sampler 目的：用于统一查看测试计划中的参数 3.12 View Results Tree组件名：View Results Tree 目的：用于统一查看测试计划中请求运行结果]]></content>
      <categories>
        <category>测试</category>
      </categories>
      <tags>
        <tag>JMeter</tag>
      </tags>
  </entry>
</search>
